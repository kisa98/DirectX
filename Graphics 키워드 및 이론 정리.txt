1.Vertex
- g_pd3dDevice: 디바이스 객체라고 부르는 것으로 GPU와 상호작용하기 위해 정의된 객체. 
- ZeroMemory: 메모리 블록의 바이트를 0으로 초기화하는 함수. (int: 0, float: 0.0, char: \n, 포인터: nullptr)
- DirectX9의 기본 컬링 모드: CCW(시계 반대 방향). 시계 반대 방향으로 그려진 삼각형이 뒷면으로 처리되어 컬링됨.
- Lock 함수: 메모리에 대해 동시에 여러 주체가 같은 메모리 값을 사용하려는 경쟁 상태를 방지하고자, 메모리 사용시 접근 가능성을 배타적으로 설정함. 인자로 이중 보이드 포인터를 받는 것이 특징.
-> 이중 보이드 포인터를 쓰는 이유? 보이드 포인터가 가리키는 값을 사용하려는 것이 아니라, 보이드 포인터의 접근성을 제한하기 위해 사용하기 때문에 보이드 포인터를 가리키는 포인터가 필요함.


2. Matrix
- 렌더링 파이프라인 - 행렬 변환: 월드 변환 -> 뷰 변환 -> 프로젝션 변환
-> 모델(월드) 변환: 객체의 모델 좌표계를 월드 좌표계로 변환하는 단계
-> 뷰 변환: 월드 좌표계를 뷰(카메라) 좌표계로 변환하는 단계
-> 프로젝션 변환: 뷰 좌표계에 위치한 3D 좌표를 2D 좌표로 변환하여 화면에 투영하는 단계. 원근 투영(Perspective)와 직교 투영(orthographic)이 있음. -> 여기까지 버텍스 셰이더의 역할
-> 레스터라이즈: 프로젝션 변환이 완료된 좌표계를 화면에 출력할 픽셀로 출력하는 과정.
- 이중 버퍼링: 깜빡임 현상(플리커링)을 방지하기 위해 화면에 출력하는 프레임인 전면 버퍼와 화면을 준비하는 프레임인 후면 버퍼를 교체하는 기법. 전후면이 교체되면 각자의 기능도 반대로 바뀌어서 계속 재활용함.
- 찢어짐 현상(Tearing): 프레임이 디스플레이에 출력되는 동안 새로운 프레임이 렌더링되어 서로 다른 프레임이 겹쳐보이는 현상. 디스플레이와 GPU 프레임 속도가 불일치하여 발생함.
- 수직 동기화(V-Sync): 찢어짐 현상을 방지하기 위해 GPU의 프레임 생성 속도를 디스플레이의 새로 고침 빈도에 맞추는 기술


3. Light
- 확산 반사(Diffuse Reflection): 특정 방향에서 오는 빛이 객체에 부딪혀 반사되는 것. 물체 표면의 기본 색상과 조합하여 물체의 색깔이 결정됨
- 확산광(Diffuse Light): 빛이 물체에 도달할 때, 광원이 모든 방향으로 고르게 퍼지는 빛.
-> Material의 Diffuse: 머테리얼의 색상
-> Light의 Diffuse: 빛의 색상
- 주변광(Ambient Light): 장면 전체에 고르게 퍼지는 빛. 균일한 조명 조명으로 모든 부분에 적용되어 그림자가 안생기고, 어두운 부분이 완전히 검지 않게 됨. 즉, 객체가 전혀 조명이 없는 것처럼 보이지 않게 만듬.
- Z버퍼: 픽셀의 깊이 값을 저장하는 버퍼. 
- 렌더링 순서: 기본적으로 생성된 순서대로 렌더링이 진행된다. 그러나, Z 버퍼 기능을 활성화하면 Z 버퍼를 이용해 멀리있는 픽셀부터 렌더링하여 앞뒤 순서가 지켜지게 렌더링 된다.


5. Mesh
- .x 파일: 3D 모델 데이터를 저장하는 파일 형식. 3D 모델의 정점, 면, 텍스쳐, 애니메이션 정보를 담고 있음.
- InitGeometry(메시 렌더링) 작동 방법: .x 파일에서 모델의 지오메트리 정보를 로드, pD3DXMtrlBuffer에 저장하고, 이후 해당 정보를 추출하여 d3dx 머테리얼에 저장 -> 각 머테리얼 정보를 g_pMeshMaterials에 저장 -> g_pMeshTextures 메시에 정보 설정